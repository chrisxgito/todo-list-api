
openapi: 3.0.1
info:
	title: Todo List Management
	description: API for managing todo lists and their entries.
	contact:
		email: c.finkhaeuser@basecom.de
	license:
		name: Apache 2.0
		url: http://www.apache.org/licenses/LICENSE-2.0.html
	version: 0.1.0
servers:
	- url: http://127.0.0.1:5000/
tags:
	- name: List Management
paths:
	/todo-list/{list_id}:
		get:
			tags:
				- List Management
			parameters:
				- name: list_id
				  in: path
				  description: The ID of the list to retrieve
				  required: true
				  schema:
					  type: string
			responses:
				200:
					description: List Entry returned
					content:
						application/json:
							schema:
								type: array
								items:
									$ref: '#/components/schemas/TodoList'
				404:
					description: Invalid list id
		delete:
			summary: Delete List
			operationId: deleteList
			parameters:
				- name: list_id
				  in: path
				  description: The ID of the list to delete
				  required: true
				  schema:
					  type: string
			responses:
				200:
					description: List Entry deleted
				404:
					description: Invalid list id
	/todo-list:
		post:
			tags:
				- List Management
			summary: Add new list
			operationId: addList
			requestBody:
				description: List object
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/TodoList'
				required: true
			responses:
				200:
					description: List added
					content:
						application/json:
							schema:
								$ref: '#/components/schemas/TodoList'
				500:
					description: List could not be added
	/todo-list/{list_id}/entry:
		post:
			tags:
				- List Management
			summary: Add new list entry
			operationId: addListEntry
			requestBody:
				description: List entry object
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/TodoEntry'
				required: true
			responses:
				200:
					description: List Entry added
				500:
					description: List entry could not be added
	/todo-list/{list_id}/entry/{entry_id}:
		patch:
			tags:
				- List Management
			summary: Update list entry
			operationId: updateListEntry
			requestBody:
				description: List entry object with updates
				content:
					application/json:
						schema:
							$ref: '#/components/schemas/TodoEntry'
				required: true
			responses:
				200:
					description: List Entry updated
				500:
					description: List entry could not be updated
		delete:
			summary: Delete List Entry
			operationId: deleteListEntry
			parameters:
				- name: list_id
				  in: path
				  description: The ID of the list that contains the entry
				  required: true
				  schema:
					  type: string
				- name: entry_id
				  in: path
				  description: The ID of the entry to delete
				  required: true
				  schema:
					  type: string
			responses:
				200:
					description: List entry deleted
				404:
					description: Invalid list id or entry id
components:
	schemas:
		TodoList:
			type: object
			properties:
				id:
					type: string
					format: uuid
				name:
					type: string
		TodoListId:
			type: object
			properties:
				id:
					type: string
					format: uuid
		TodoEntry:
			type: object
			properties:
				id:
					type: string
					format: uuid
				name:
					type: string
				description:
					type: string
				user_id:
					type: string
					format: uuid
				list_id:
					type: string
					format: uuid
		GeneralError:
			type: object
			properties:
				code:
					type: integer
					format: int32
				message:
					type: string
		TodoEntryAndListId:
			type: object
			properties:
				listId:
					type: string
					format: uuid
				entryId:
					type: string
					format: uuid
   